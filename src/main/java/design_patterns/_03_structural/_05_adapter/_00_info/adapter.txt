Пусть существуют две системы, выполняющие сходные действия, но несовместимые по интерфейсу, которые, тем не менее,
необходимо заставить работать в одном приложении.

Позволяет определить интерфейс-адаптер, доступный его пользователямклиентам, в то же время способ реализации
отделяет от клиентов и не известен им. Однако функциональность, предоставляемая клиентам, соответствует заданному
контракту. Обеспечивается взаимодействие несовместимых интерфейсов, предоставляемых классами типа Adaptee.

***

Класс Client может взаимодействовать только с экземплярами, реализующими интерфейс Adapter. Экземпляр класса Client,
вызывая метод execute(), не будет знать, метод какого класса он вызывает — основного или адаптируемого. Предназначение
шаблона Adapter — без серьезной переработки системы включить необходимый функционал в общем случае несовместимый
с существующим.

***

Представленная реализация использует один класс типа Adaptee. В общем случае эти классы могут быть организованы
в иерархию и при инициализации объекта типа Adapter будет передаваться объект из иерархии, и скрытое действие
будет выполняться в соответствии с конкретным типа объекта. Но это уже будет не совсем шаблон Adapter.

Класс Adapter должен обладать механизмом согласования параметров и способом трансляции вызова методов основного
приложения и адаптируемого класса.