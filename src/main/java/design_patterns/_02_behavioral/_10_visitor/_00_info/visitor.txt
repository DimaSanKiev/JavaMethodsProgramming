Необходимо иметь возможность добавлять новую функциональность классам некоторой иерархии, не изменяя интерфейс
базового класса. Варианты возможного поведения централизуются и остаются неизменными в то время, как операции
для разных классов должны выполняться по-разному.

Шаблон Visitor позволяет сосредоточить все такие операции в одном классе. Классов типа ConcreteElement может
быть много, но для каждого из них в классе ConcreteVisitor будет реализован метод visit(), определяющий именно
его алгоритм.

Шаблон Visitor легко расширяем для новых операций посредством простой реализации интерфейса новым классом с
соответствующей реализацией метода.

Класс ObjectStructure может агрегировать один или группу экземпляров типа Element с определенным набором
активации шаблона.